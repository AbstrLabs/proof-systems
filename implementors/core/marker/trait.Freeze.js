(function() {var implementors = {};
implementors["commitment_dlog"] = [{"text":"impl&lt;C&gt; Freeze for <a class=\"struct\" href=\"commitment_dlog/commitment/struct.PolyComm.html\" title=\"struct commitment_dlog::commitment::PolyComm\">PolyComm</a>&lt;C&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;C: Freeze,&nbsp;</span>","synthetic":true,"types":["commitment_dlog::commitment::PolyComm"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"commitment_dlog/commitment/struct.OpeningProof.html\" title=\"struct commitment_dlog::commitment::OpeningProof\">OpeningProof</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["commitment_dlog::commitment::OpeningProof"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"commitment_dlog/commitment/struct.Challenges.html\" title=\"struct commitment_dlog::commitment::Challenges\">Challenges</a>&lt;F&gt;","synthetic":true,"types":["commitment_dlog::commitment::Challenges"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"commitment_dlog/srs/struct.SRS.html\" title=\"struct commitment_dlog::srs::SRS\">SRS</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["commitment_dlog::srs::SRS"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"enum\" href=\"commitment_dlog/srs/enum.SRSValue.html\" title=\"enum commitment_dlog::srs::SRSValue\">SRSValue</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["commitment_dlog::srs::SRSValue"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"enum\" href=\"commitment_dlog/srs/enum.SRSSpec.html\" title=\"enum commitment_dlog::srs::SRSSpec\">SRSSpec</a>&lt;'a, G&gt;","synthetic":true,"types":["commitment_dlog::srs::SRSSpec"]}];
implementors["groupmap"] = [{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"groupmap/struct.BWParameters.html\" title=\"struct groupmap::BWParameters\">BWParameters</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as ModelParameters&gt;::BaseField: Freeze,&nbsp;</span>","synthetic":true,"types":["groupmap::BWParameters"]}];
implementors["mina_curves"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"mina_curves/pasta/pallas/struct.PallasParameters.html\" title=\"struct mina_curves::pasta::pallas::PallasParameters\">PallasParameters</a>","synthetic":true,"types":["mina_curves::pasta::curves::pallas::PallasParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mina_curves/pasta/vesta/struct.VestaParameters.html\" title=\"struct mina_curves::pasta::vesta::VestaParameters\">VestaParameters</a>","synthetic":true,"types":["mina_curves::pasta::curves::vesta::VestaParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mina_curves/pasta/fp/struct.FpParameters.html\" title=\"struct mina_curves::pasta::fp::FpParameters\">FpParameters</a>","synthetic":true,"types":["mina_curves::pasta::fields::fp::FpParameters"]},{"text":"impl Freeze for <a class=\"struct\" href=\"mina_curves/pasta/fq/struct.FqParameters.html\" title=\"struct mina_curves::pasta::fq::FqParameters\">FqParameters</a>","synthetic":true,"types":["mina_curves::pasta::fields::fq::FqParameters"]}];
implementors["oracle"] = [{"text":"impl Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.MarlinSpongeConstants.html\" title=\"struct oracle::poseidon::MarlinSpongeConstants\">MarlinSpongeConstants</a>","synthetic":true,"types":["oracle::poseidon::MarlinSpongeConstants"]},{"text":"impl Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.PlonkSpongeConstants.html\" title=\"struct oracle::poseidon::PlonkSpongeConstants\">PlonkSpongeConstants</a>","synthetic":true,"types":["oracle::poseidon::PlonkSpongeConstants"]},{"text":"impl Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.PlonkSpongeConstants5W.html\" title=\"struct oracle::poseidon::PlonkSpongeConstants5W\">PlonkSpongeConstants5W</a>","synthetic":true,"types":["oracle::poseidon::PlonkSpongeConstants5W"]},{"text":"impl Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.PlonkSpongeConstants3.html\" title=\"struct oracle::poseidon::PlonkSpongeConstants3\">PlonkSpongeConstants3</a>","synthetic":true,"types":["oracle::poseidon::PlonkSpongeConstants3"]},{"text":"impl Freeze for <a class=\"enum\" href=\"oracle/poseidon/enum.SpongeState.html\" title=\"enum oracle::poseidon::SpongeState\">SpongeState</a>","synthetic":true,"types":["oracle::poseidon::SpongeState"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.ArithmeticSpongeParams.html\" title=\"struct oracle::poseidon::ArithmeticSpongeParams\">ArithmeticSpongeParams</a>&lt;F&gt;","synthetic":true,"types":["oracle::poseidon::ArithmeticSpongeParams"]},{"text":"impl&lt;F, SC&gt; Freeze for <a class=\"struct\" href=\"oracle/poseidon/struct.ArithmeticSponge.html\" title=\"struct oracle::poseidon::ArithmeticSponge\">ArithmeticSponge</a>&lt;F, SC&gt;","synthetic":true,"types":["oracle::poseidon::ArithmeticSponge"]},{"text":"impl Freeze for <a class=\"enum\" href=\"oracle/rndoracle/enum.ProofError.html\" title=\"enum oracle::rndoracle::ProofError\">ProofError</a>","synthetic":true,"types":["oracle::rndoracle::ProofError"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"oracle/sponge/struct.ScalarChallenge.html\" title=\"struct oracle::sponge::ScalarChallenge\">ScalarChallenge</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["oracle::sponge::ScalarChallenge"]},{"text":"impl&lt;P, SC&gt; Freeze for <a class=\"struct\" href=\"oracle/sponge/struct.DefaultFqSponge.html\" title=\"struct oracle::sponge::DefaultFqSponge\">DefaultFqSponge</a>&lt;P, SC&gt;","synthetic":true,"types":["oracle::sponge::DefaultFqSponge"]},{"text":"impl&lt;Fr, SC&gt; Freeze for <a class=\"struct\" href=\"oracle/sponge/struct.DefaultFrSponge.html\" title=\"struct oracle::sponge::DefaultFrSponge\">DefaultFrSponge</a>&lt;Fr, SC&gt;","synthetic":true,"types":["oracle::sponge::DefaultFrSponge"]}];
implementors["plonk_5_wires_circuits"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/constraints/struct.ConstraintSystem.html\" title=\"struct plonk_5_wires_circuits::constraints::ConstraintSystem\">ConstraintSystem</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::constraints::ConstraintSystem"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/domains/struct.EvaluationDomains.html\" title=\"struct plonk_5_wires_circuits::domains::EvaluationDomains\">EvaluationDomains</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::domains::EvaluationDomains"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plonk_5_wires_circuits/gate/enum.GateType.html\" title=\"enum plonk_5_wires_circuits::gate::GateType\">GateType</a>","synthetic":true,"types":["plonk_5_wires_circuits::gate::GateType"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/gate/struct.CircuitGate.html\" title=\"struct plonk_5_wires_circuits::gate::CircuitGate\">CircuitGate</a>&lt;F&gt;","synthetic":true,"types":["plonk_5_wires_circuits::gate::CircuitGate"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/polynomial/struct.WitnessEvals.html\" title=\"struct plonk_5_wires_circuits::polynomial::WitnessEvals\">WitnessEvals</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::polynomial::WitnessEvals"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/polynomial/struct.WitnessShifts.html\" title=\"struct plonk_5_wires_circuits::polynomial::WitnessShifts\">WitnessShifts</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::polynomial::WitnessShifts"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/polynomial/struct.WitnessOverDomains.html\" title=\"struct plonk_5_wires_circuits::polynomial::WitnessOverDomains\">WitnessOverDomains</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::polynomial::WitnessOverDomains"]},{"text":"impl&lt;Fs&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/scalars/struct.ProofEvaluations.html\" title=\"struct plonk_5_wires_circuits::scalars::ProofEvaluations\">ProofEvaluations</a>&lt;Fs&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::scalars::ProofEvaluations"]},{"text":"impl&lt;Fs&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/scalars/struct.CamlProofEvaluations.html\" title=\"struct plonk_5_wires_circuits::scalars::CamlProofEvaluations\">CamlProofEvaluations</a>&lt;Fs&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::scalars::CamlProofEvaluations"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/scalars/struct.RandomOracles.html\" title=\"struct plonk_5_wires_circuits::scalars::RandomOracles\">RandomOracles</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_circuits::scalars::RandomOracles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plonk_5_wires_circuits/wires/struct.Wire.html\" title=\"struct plonk_5_wires_circuits::wires::Wire\">Wire</a>","synthetic":true,"types":["plonk_5_wires_circuits::wires::Wire"]}];
implementors["plonk_5_wires_protocol_dlog"] = [{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_protocol_dlog/index/struct.Index.html\" title=\"struct plonk_5_wires_protocol_dlog::index::Index\">Index</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_protocol_dlog::index::Index"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_protocol_dlog/index/struct.VerifierIndex.html\" title=\"struct plonk_5_wires_protocol_dlog::index::VerifierIndex\">VerifierIndex</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_protocol_dlog::index::VerifierIndex"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_protocol_dlog/prover/struct.ProverCommitments.html\" title=\"struct plonk_5_wires_protocol_dlog::prover::ProverCommitments\">ProverCommitments</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_protocol_dlog::prover::ProverCommitments"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_protocol_dlog/prover/struct.CamlProverCommitments.html\" title=\"struct plonk_5_wires_protocol_dlog::prover::CamlProverCommitments\">CamlProverCommitments</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_protocol_dlog::prover::CamlProverCommitments"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"plonk_5_wires_protocol_dlog/prover/struct.ProverProof.html\" title=\"struct plonk_5_wires_protocol_dlog::prover::ProverProof\">ProverProof</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_5_wires_protocol_dlog::prover::ProverProof"]}];
implementors["plonk_circuits"] = [{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/constraints/struct.ConstraintSystem.html\" title=\"struct plonk_circuits::constraints::ConstraintSystem\">ConstraintSystem</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::constraints::ConstraintSystem"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/domains/struct.EvaluationDomains.html\" title=\"struct plonk_circuits::domains::EvaluationDomains\">EvaluationDomains</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::domains::EvaluationDomains"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plonk_circuits/gate/enum.GateType.html\" title=\"enum plonk_circuits::gate::GateType\">GateType</a>","synthetic":true,"types":["plonk_circuits::gate::GateType"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/gate/struct.CircuitGate.html\" title=\"struct plonk_circuits::gate::CircuitGate\">CircuitGate</a>&lt;F&gt;","synthetic":true,"types":["plonk_circuits::gate::CircuitGate"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/gate/struct.Gate.html\" title=\"struct plonk_circuits::gate::Gate\">Gate</a>&lt;F&gt;","synthetic":true,"types":["plonk_circuits::gate::Gate"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/polynomial/struct.WitnessEvals.html\" title=\"struct plonk_circuits::polynomial::WitnessEvals\">WitnessEvals</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::polynomial::WitnessEvals"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/polynomial/struct.WitnessShifts.html\" title=\"struct plonk_circuits::polynomial::WitnessShifts\">WitnessShifts</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::polynomial::WitnessShifts"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/polynomial/struct.WitnessOverDomains.html\" title=\"struct plonk_circuits::polynomial::WitnessOverDomains\">WitnessOverDomains</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::polynomial::WitnessOverDomains"]},{"text":"impl&lt;Fs&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/scalars/struct.ProofEvaluations.html\" title=\"struct plonk_circuits::scalars::ProofEvaluations\">ProofEvaluations</a>&lt;Fs&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::scalars::ProofEvaluations"]},{"text":"impl&lt;F&gt; Freeze for <a class=\"struct\" href=\"plonk_circuits/scalars/struct.RandomOracles.html\" title=\"struct plonk_circuits::scalars::RandomOracles\">RandomOracles</a>&lt;F&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;F: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_circuits::scalars::RandomOracles"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plonk_circuits/wires/struct.GateWires.html\" title=\"struct plonk_circuits::wires::GateWires\">GateWires</a>","synthetic":true,"types":["plonk_circuits::wires::GateWires"]},{"text":"impl Freeze for <a class=\"enum\" href=\"plonk_circuits/wires/enum.Col.html\" title=\"enum plonk_circuits::wires::Col\">Col</a>","synthetic":true,"types":["plonk_circuits::wires::Col"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plonk_circuits/wires/struct.Wire.html\" title=\"struct plonk_circuits::wires::Wire\">Wire</a>","synthetic":true,"types":["plonk_circuits::wires::Wire"]},{"text":"impl Freeze for <a class=\"struct\" href=\"plonk_circuits/wires/struct.Wires.html\" title=\"struct plonk_circuits::wires::Wires\">Wires</a>","synthetic":true,"types":["plonk_circuits::wires::Wires"]}];
implementors["plonk_protocol_dlog"] = [{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"plonk_protocol_dlog/index/struct.Index.html\" title=\"struct plonk_protocol_dlog::index::Index\">Index</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_protocol_dlog::index::Index"]},{"text":"impl&lt;'a, G&gt; Freeze for <a class=\"struct\" href=\"plonk_protocol_dlog/index/struct.VerifierIndex.html\" title=\"struct plonk_protocol_dlog::index::VerifierIndex\">VerifierIndex</a>&lt;'a, G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::BaseField: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_protocol_dlog::index::VerifierIndex"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"plonk_protocol_dlog/prover/struct.ProverCommitments.html\" title=\"struct plonk_protocol_dlog::prover::ProverCommitments\">ProverCommitments</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_protocol_dlog::prover::ProverCommitments"]},{"text":"impl&lt;G&gt; Freeze for <a class=\"struct\" href=\"plonk_protocol_dlog/prover/struct.ProverProof.html\" title=\"struct plonk_protocol_dlog::prover::ProverProof\">ProverProof</a>&lt;G&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;G: Freeze,<br>&nbsp;&nbsp;&nbsp;&nbsp;&lt;G as AffineCurve&gt;::ScalarField: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_protocol_dlog::prover::ProverProof"]},{"text":"impl&lt;Fs&gt; Freeze for <a class=\"struct\" href=\"plonk_protocol_dlog/verifier/struct.CachedValues.html\" title=\"struct plonk_protocol_dlog::verifier::CachedValues\">CachedValues</a>&lt;Fs&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Fs: Freeze,&nbsp;</span>","synthetic":true,"types":["plonk_protocol_dlog::verifier::CachedValues"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()