var searchIndex = JSON.parse('{\
"commitment_dlog":{"doc":"","t":[8,8,0,0,0,3,8,16,3,16,3,5,5,11,11,11,11,11,11,5,12,12,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,10,11,5,11,11,12,5,12,10,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,18,18,18,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,12,12,11,11,12,11,11,11,11,11,11,11,11,11],"n":["CommitmentField","QnrField","chunked","commitment","srs","Challenges","CommitmentCurve","Map","OpeningProof","Params","PolyComm","b_poly","b_poly_coefficients","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","ceil_log2","chal","chal_inv","challenges","chunk_blinding","chunk_commitment","clone","clone","clone_into","clone_into","combine","combine_one","combined_inner_product","delta","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","fmt","fmt","from","from","from","init","init","init","into","into","into","lr","map","multi_scalar_mul","of_coordinates","prechallenges","product","scale","serialize","sg","shift_scalar","shifted","to_coordinates","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unshifted","vzip","vzip","vzip","z1","z2","QNR","QNR","QNR","QnrField","SRS","add_lagrange_basis","borrow","borrow_mut","clone","clone_into","commit","commit_evaluations","commit_evaluations_non_hiding","commit_non_hiding","create","default","deref","deref_mut","deserialize","drop","endo_q","endo_r","endos","fmt","from","g","h","init","into","lagrange_bases","max_degree","open","serialize","to_owned","try_from","try_into","type_id","verify","vzip"],"q":["commitment_dlog","","","","","commitment_dlog::commitment","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","commitment_dlog::srs","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","A polynomial commitment.","Returns (1 + chal[-1] x)(1 + chal[-2] x^2)(1 + chal[-3] …","","","","","","","","Returns ceil(log2(d)) but panics if d = 0.","","","","Multiplies each blinding chunk of f with powers of zeta^n …","Multiplies each commitment chunk of f with powers of zeta^n","","","","","","","Computes the linearization of the evaluations of a …","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the product of all the field elements belonging to …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Compute commitments to the lagrange basis corresponding to …","","","","","Commits a polynomial, potentially splitting the result in …","","","This function commits a polynomial using the SRS’ basis …","This function creates SRS instance for circuits with …","","","","","","Coefficient for the curve endomorphism","Coefficient for the curve endomorphism","","","","The vector of group elements for committing to polynomials …","A group element used for blinding commitments","","","Commitments to Lagrange bases, per domain size","","This function opens polynomial commitments in batch plnms: …","","","","","","This function verifies batch of batched polynomial …",""],"i":[0,0,0,0,0,0,0,1,0,1,0,0,0,2,3,4,2,3,4,0,2,2,4,3,3,3,4,3,4,1,1,0,4,2,3,4,2,3,4,3,2,3,4,3,4,2,3,4,2,3,4,2,3,4,4,3,3,1,4,0,3,3,4,0,3,1,3,4,2,3,4,2,3,4,2,3,4,3,2,3,4,4,4,5,5,5,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"f":[null,null,null,null,null,null,null,null,null,null,null,[[["field",8],["vec",3]],["field",8]],[[],[["field",8],["vec",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]],["usize",15]],null,null,[[],["challenges",3]],[[]],[[]],[[],["polycomm",3]],[[],["openingproof",3]],[[]],[[]],[[["vec",3]],["vec",3]],[[["vec",3]],["vec",3]],[[["usize",15],["vec",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,[[],["polycomm",3]],[[["vec",3],["vec",3]]],[[]],[[],[["vec",3,["scalarchallenge"]],["scalarchallenge",3]]],[[],["field",8]],[[],["polycomm",3]],[[],["result",4]],null,[[["primefield",8]],["primefield",8]],null,[[],["option",4]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[]],[[]],[[]],null,null,null,null,null,null,null,[[["d",3]]],[[]],[[]],[[],["srs",3]],[[]],[[["usize",15],["densepolynomial",3],["option",4,["usize"]]]],[[["evaluations",3],["d",3],["usize",15],["option",4,["usize"]]]],[[["evaluations",3],["d",3],["usize",15],["option",4,["usize"]]],["polycomm",3]],[[["usize",15],["densepolynomial",3],["option",4,["usize"]]],["polycomm",3]],[[["usize",15]]],[[],["srs",3]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],null,null,[[]],[[["formatter",3]],["result",6]],[[]],null,null,[[],["usize",15]],[[]],null,[[],["usize",15]],[[["vec",3],["vec",3]],["openingproof",3]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vec",3]],["bool",15]],[[]]],"p":[[8,"CommitmentCurve"],[3,"Challenges"],[3,"PolyComm"],[3,"OpeningProof"],[8,"QnrField"],[3,"SRS"]]},\
"export_test_vectors":{"doc":"","t":[13,13,4,11,11,11,11,11,11,11,11,11,11,5,11,11,11,0,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,12,11,11,12,12,5,5,11,11,12,11,11,11,11,11,11,11,11],"n":["B10","Hex","Mode","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","from_str","init","into","main","try_from","try_into","type_id","vectors","vzip","TestVector","TestVectors","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","generate","init","init","input","into","into","name","output","poseidon","rand_fields","serialize","serialize","test_vectors","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["export_test_vectors","","","","","","","","","","","","","","","","","","","export_test_vectors::vectors","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[1,1,0,1,1,1,1,1,1,1,1,1,1,0,1,1,1,0,1,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,2,3,3,2,3,2,3,0,0,2,3,2,2,3,2,3,2,3,2,3],"f":[null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[["str",15]],["result",4]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],[[]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[["mode",4]],["testvectors",3]],[[],["usize",15]],[[],["usize",15]],null,[[]],[[]],null,null,[[],["fp",6]],[[["u8",15]],[["fp",6],["vec",3,["fp"]]]],[[],["result",4]],[[],["result",4]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]]],"p":[[4,"Mode"],[3,"TestVectors"],[3,"TestVector"]]},\
"groupmap":{"doc":"","t":[3,8,10,11,11,11,11,11,11,11,5,11,11,10,11,10,11,11,11,11,11],"n":["BWParameters","GroupMap","batch_to_group_x","batch_to_group_x","borrow","borrow_mut","deref","deref_mut","drop","from","get_y","init","into","setup","setup","to_group","to_group","try_from","try_into","type_id","vzip"],"q":["groupmap","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","returns the y-coordinate if x is a valid point on the …","","","","","","","","","",""],"i":[0,0,1,2,2,2,2,2,2,2,0,2,2,1,2,1,2,2,2,2,2],"f":[null,null,[[["vec",3]],["vec",3]],[[["vec",3]],["vec",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["option",4]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[8,"GroupMap"],[3,"BWParameters"]]},\
"mina_curves":{"doc":"","t":[0,6,3,6,3,0,0,0,0,6,3,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,6,17,17,3,6,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,6,17,17,6,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["pasta","Fp","FpParameters","Fq","FqParameters","fp","fq","pallas","vesta","Fp","FpParameters","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","Fq","FqParameters","borrow","borrow_mut","deref","deref_mut","drop","from","init","into","try_from","try_into","type_id","vzip","Affine","G_GENERATOR_X","G_GENERATOR_Y","PallasParameters","Projective","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","from","init","into","mul_by_a","to_owned","try_from","try_into","type_id","vzip","Affine","G_GENERATOR_X","G_GENERATOR_Y","Projective","VestaParameters","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","drop","eq","from","init","into","mul_by_a","to_owned","try_from","try_into","type_id","vzip"],"q":["mina_curves","mina_curves::pasta","","","","","","","","mina_curves::pasta::fp","","","","","","","","","","","","","","mina_curves::pasta::fq","","","","","","","","","","","","","","mina_curves::pasta::pallas","","","","","","","","","","","","","","","","","","","","","","","mina_curves::pasta::vesta","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","G_GENERATOR_X = 1","G1_GENERATOR_Y = …","","","","","","","","","","","","","","","","","","","","","","G_GENERATOR_X = 1","G1_GENERATOR_Y = …","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,0,0,2,2,2,2,2,2,2,2,2,2,2,2,0,0,0,0,0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[],["pallasparameters",3]],[[]],[[],["pallasparameters",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["pallasparameters",3]],["bool",15]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[],["vestaparameters",3]],[[]],[[],["vestaparameters",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["vestaparameters",3]],["bool",15]],[[]],[[],["usize",15]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]]],"p":[[3,"FpParameters"],[3,"FqParameters"],[3,"PallasParameters"],[3,"VestaParameters"]]},\
"o1_utils":{"doc":"","t":[0,0,0,8,10,10,10,10,10,8,10,10,10,10,3,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,5,5],"n":["dense_polynomial","evaluations","serialization","ExtendedDensePolynomial","chunk_polynomial","eval","eval_polynomial","scale","shiftr","ExtendedEvaluations","pow","scale","shift","square","SerdeAs","borrow","borrow_mut","deref","deref_mut","deserialize_as","drop","from","init","into","serialization","serialize_as","try_from","try_into","type_id","vzip","deserialize","serialize"],"q":["o1_utils","","","o1_utils::dense_polynomial","","","","","","o1_utils::evaluations","","","","","o1_utils::serialization","","","","","","","","","","","","","","","","o1_utils::serialization::serialization",""],"d":["This adds a few utility functions for the DensePolynomial …","This adds a few utility functions for the Evaluations …","This adds a few utility functions for serializing and …","An extension for the DensePolynomial type.","Multiplies the chunks of a polynomial with powers of zeta^n","This function evaluates polynomial in chunks.","<code>eval_polynomial(coeffs, x)</code> evaluates a polynomial given …","This function “scales” (multiplies all the …","Shifts all the coefficients to the right.","An extension for the Evaluations type.","raise each evaluation to some power <code>pow</code>","This function “scales” (multiplies) a polynomial with …","utility function for shifting poly along domain coordinate","square each evaluation","You can use SerdeAs with serde_with in order to serialize …","","","","","","","","","","You can use this module for serialization and …","","","","","","You can use this to deserialize an arkworks type with …","You can use this to serialize an arkworks type with serde …"],"i":[0,0,0,0,1,1,1,1,1,0,2,2,2,2,0,3,3,3,3,3,3,3,3,3,0,3,3,3,3,3,0,0],"f":[null,null,null,null,[[["usize",15]]],[[["usize",15]],["vec",3]],[[]],[[]],[[["usize",15]]],null,[[["usize",15]]],[[]],[[["usize",15]]],[[]],null,[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["result",4]],[[],["result",4]]],"p":[[8,"ExtendedDensePolynomial"],[8,"ExtendedEvaluations"],[3,"SerdeAs"]]},\
"ocaml_derive":{"doc":"ocaml-derive adds a number of derives to make ocaml-gen …","t":[24,24,24,23],"n":["OCamlCustomType","OcamlEnum","OcamlGen","ocaml_gen"],"q":["ocaml_derive","","",""],"d":["Derives implementations for OCamlDesc and OCamlBinding on …","The OcamlEnum derive macro. It generates implementations …","The OcamlGen derive macro. It generates implementations of …","A macro to create OCaml bindings for a function that uses #…"],"i":[0,0,0,0],"f":[null,null,null,null],"p":[]},\
"ocaml_gen":{"doc":"Generating bindings","t":[3,8,24,8,24,24,11,11,14,0,14,14,14,14,14,11,11,11,11,11,11,11,11,11,11,10,10,23,11,11,11,11,11,10],"n":["Env","OCamlBinding","OCamlCustomType","OCamlDesc","OcamlEnum","OcamlGen","borrow","borrow_mut","const_random","conv","decl_fake_generic","decl_func","decl_module","decl_type","decl_type_alias","default","drop","fmt","from","get_type","into","nested","new_custom_type","new_module","new_type","ocaml_binding","ocaml_desc","ocaml_gen","parent","root","try_from","try_into","type_id","unique_id"],"q":["ocaml_gen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["The environment at some point in time during the …","OCamlBinding is the trait implemented by types to generate …","Derives implementations for OCamlDesc and OCamlBinding on …","OCamlDesc is the trait implemented by types to facilitate …","The OcamlEnum derive macro. It generates implementations …","The OcamlGen derive macro. It generates implementations of …","","","Random constants","Implementations of crate::OCamlDesc for types that have …","Creates a fake generic. This is a necessary hack, at the …","Declares the binding for a given function","Creates a module","Declares the binding for a given type","Declares a new OCaml type that is made of other types","","This makes sure that we close our OCaml modules (with the …","","","retrieves a type that was declared previously","","how deeply nested are we currently? (default is 0)","Declares a new custom type. Unlike [new_type] this can be …","create a module and enters it","Declares a new type. If the type was already declared, …","will generate the OCaml bindings for a type (called root …","describes the type in OCaml, given the current environment …","A macro to create OCaml bindings for a function that uses #…","go back up one module","you can call this to go back to the root and finalize the …","","","","Returns a unique ID for the type. This ID will not change …"],"i":[0,0,0,0,0,0,1,1,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,2,3,0,1,1,1,1,1,3],"f":[null,null,null,null,null,null,[[]],[[]],null,null,null,null,null,null,null,[[],["env",3]],[[]],[[["formatter",3]],["result",6]],[[]],[[["str",15],["u128",15]],["string",3]],[[]],[[],["usize",15]],[[["u128",15],["str",15]]],[[["str",15]],["string",3]],[[["u128",15],["str",15]]],[[["env",3],["bool",15],["option",4,["str"]],["str",15]],["string",3]],[[["env",3]],["string",3]],null,[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["u128",15]]],"p":[[3,"Env"],[8,"OCamlBinding"],[8,"OCamlDesc"]]},\
"oracle":{"doc":"","t":[8,10,10,10,10,10,10,0,0,0,0,0,0,0,0,0,0,5,5,5,5,5,5,13,3,3,18,18,18,3,3,3,3,18,18,18,18,18,18,8,8,4,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,12,5,11,12,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,13,13,13,13,13,13,13,13,13,13,4,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,17,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["FqSponge","absorb_fr","absorb_g","challenge","challenge_fq","digest","new","pasta","poseidon","rndoracle","sponge","fp","fp5","fp_3","fq","fq5","fq_3","params","params","params","params","params","params","Absorbed","ArithmeticSponge","ArithmeticSpongeParams","FULL_MDS","HALF_ROUNDS_FULL","INITIAL_ARK","PlonkSpongeConstants15W","PlonkSpongeConstants3W","PlonkSpongeConstants5W","PlonkSpongeConstantsBasic","ROUNDS_FULL","ROUNDS_PARTIAL","SPONGE_BOX","SPONGE_CAPACITY","SPONGE_RATE","SPONGE_WIDTH","Sponge","SpongeConstants","SpongeState","Squeezed","absorb","absorb","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","constants","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","from","from","from","from","from","from","from","full_round","init","init","init","init","init","init","init","into","into","into","into","into","into","into","mds","new","new","round_constants","sbox","serialize","sponge_state","squeeze","squeeze","state","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","ConstraintInconsist","DomainCreation","EvaluationGroup","OpenProof","OracleCommit","PolyCommit","PolyCommitWithBound","PolyDivision","PolyExponentiate","ProofCreation","ProofError","ProofVerification","RuntimeEnv","SumCheck","WitnessCsInconsistent","WitnessGateError","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fmt","fmt","from","init","into","to_owned","to_string","try_from","try_into","type_id","vzip","0","CHALLENGE_LENGTH_IN_LIMBS","DefaultFqSponge","DefaultFrSponge","ScalarChallenge","absorb_fr","absorb_g","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","challenge","challenge_fq","clone","clone","clone_into","clone_into","deref","deref","deref","deref_mut","deref_mut","deref_mut","digest","drop","drop","drop","endo_coefficient","fmt","from","from","from","init","init","init","into","into","into","last_squeezed","last_squeezed","new","sponge","sponge","squeeze","squeeze","squeeze_field","squeeze_limbs","to_field","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["oracle","","","","","","","","","","","oracle::pasta","","","","","","oracle::pasta::fp","oracle::pasta::fp5","oracle::pasta::fp_3","oracle::pasta::fq","oracle::pasta::fq5","oracle::pasta::fq_3","oracle::poseidon","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oracle::poseidon::SpongeState","","oracle::rndoracle","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","oracle::sponge","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Performs a single full round (given the round number) for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A challenge which is used as a scalar on a group element …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,1,1,1,1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,0,0,3,3,3,0,0,0,0,3,3,3,3,3,3,0,0,0,2,4,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,5,10,6,7,8,9,2,10,5,6,7,8,9,2,10,5,10,6,7,8,9,2,10,5,2,10,6,7,8,9,2,10,5,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,10,4,5,10,0,10,5,4,5,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,6,7,8,9,2,10,5,11,12,13,13,13,13,13,13,13,13,13,13,0,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,14,0,0,0,0,15,15,16,14,15,16,14,15,15,15,14,15,14,15,16,14,15,16,14,15,15,16,14,15,0,14,16,14,15,16,14,15,16,14,15,16,15,15,16,15,16,15,15,15,14,14,15,16,14,15,16,14,15,16,14,15,16,14,15],"f":[null,[[]],[[]],[[]],[[]],[[]],[[["arithmeticspongeparams",3]]],null,null,null,null,null,null,null,null,null,null,[[],[["fp",6],["arithmeticspongeparams",3,["fp"]]]],[[],[["fp",6],["arithmeticspongeparams",3,["fp"]]]],[[],[["fp",6],["arithmeticspongeparams",3,["fp"]]]],[[],[["arithmeticspongeparams",3,["fq"]],["fq",6]]],[[],[["arithmeticspongeparams",3,["fq"]],["fq",6]]],[[],[["arithmeticspongeparams",3,["fq"]],["fq",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["plonkspongeconstantsbasic",3]],[[],["plonkspongeconstants5w",3]],[[],["plonkspongeconstants3w",3]],[[],["plonkspongeconstants15w",3]],[[],["spongestate",4]],[[],["arithmeticspongeparams",3]],[[],["arithmeticsponge",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["arithmeticspongeparams",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15]]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["arithmeticspongeparams",3]]],[[["arithmeticspongeparams",3]],["arithmeticsponge",3]],null,[[["field",8]],["field",8]],[[],["result",4]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["prooferror",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scalarchallenge",3]],[[],["defaultfqsponge",3]],[[]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["primefield",8]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,[[["arithmeticspongeparams",3]],["defaultfqsponge",3]],null,null,[[["usize",15]]],[[["usize",15]]],[[]],[[["usize",15]],[["u64",15],["vec",3,["u64"]]]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]]],"p":[[8,"FqSponge"],[4,"SpongeState"],[8,"SpongeConstants"],[8,"Sponge"],[3,"ArithmeticSponge"],[3,"PlonkSpongeConstantsBasic"],[3,"PlonkSpongeConstants5W"],[3,"PlonkSpongeConstants3W"],[3,"PlonkSpongeConstants15W"],[3,"ArithmeticSpongeParams"],[13,"Absorbed"],[13,"Squeezed"],[4,"ProofError"],[3,"ScalarChallenge"],[3,"DefaultFqSponge"],[3,"DefaultFrSponge"]]},\
"plonk_15_wires_circuits":{"doc":"","t":[0,0,0,0,0,0,0,0,0,0,3,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,13,13,13,13,13,3,13,3,13,13,13,4,13,4,3,13,13,6,3,4,13,13,13,13,13,3,13,13,13,13,3,13,13,13,13,13,13,4,4,13,13,13,13,13,13,13,13,13,3,13,13,13,13,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,3,13,4,13,13,4,13,13,13,13,13,13,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,0,0,0,0,0,0,0,17,17,17,17,17,17,17,5,0,0,3,11,11,11,12,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,12,12,12,12,11,11,11,11,11,11,11,5,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,0,0,3,13,13,4,13,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,5,11,11,11,12,11,11,12,12,12,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,12,12,11,11,11,12,12,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,5,12,12,12,12,12,12,12,3,3,3,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,12,12,12,12,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,0,0,0,0,0,0,0,0,17,17,6,17,17,3,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11],"n":["domains","expr","gate","gates","lookup","macros","nolookup","polynomial","polynomials","wires","EvaluationDomains","borrow","borrow_mut","clone","clone_into","create","d1","d2","d4","d8","deref","deref_mut","deserialize","drop","fmt","from","init","into","serialize","to_owned","try_from","try_into","type_id","vzip","Add","Add","Add","Alpha","Alpha","Beta","Beta","BinOp","Cache","Cache","CacheId","Cell","Cell","Coefficient","Column","Constant","ConstantExpr","Constants","Double","Dup","E","Environment","Expr","Gamma","Gamma","Index","JointCombiner","JointCombiner","Linearization","Literal","Literal","Load","LookupAggreg","LookupEnvironment","LookupKindIndex","LookupSorted","LookupTable","Mul","Mul","Mul","Op2","PolishToken","Pow","Pow","Pow","Store","Sub","Sub","Sub","UnnormalizedLagrangeBasis","UnnormalizedLagrangeBasis","Variable","Witness","Z","ZkPolynomial","ZkPolynomial","add","add","aggreg","alpha","beta","beta","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cache","cell","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","coefficient","col","combine_constraints","constant","constant_term","constants","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","domain","double","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","eq","eq","evaluate","evaluate","evaluate","evaluate_","evaluate_constants","evaluate_constants","evaluations","evaluations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","gamma","get_hash","get_hash","get_hash","hash","hash","hash","index","index_terms","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","is_one","is_one","is_zero","is_zero","joint_combiner","l0_1","l0_1","linearize","literal","lookup","map","mul","mul","ne","ne","ne","ne","ne","ne","neg","neg","new","one","one","partial_cmp","partial_cmp","partial_cmp","pow","pow","pows","row","selectors","sorted","sub","sub","table","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_polish","to_polynomial","to_polynomial","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","z","zero","zero","zk_polynomial","0","0","0","0","0","0","0","0","0","0","1","1","1","1","0","0","0","0","0","0","0","1","1","1","2","0","0","0","0","0","Add","CircuitGate","Curr","CurrOrNext","Double","Endomul","GateType","Generic","Lookup","Next","Poseidon","Vbmul","Zero","add","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","create_add","create_double","create_endomul","create_generic","create_generic_add","create_generic_const","create_generic_mul","create_generic_public","create_lookup","create_poseidon","create_poseidon_gadget","create_vbmul","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","double","drop","drop","drop","endomul","eq","eq","fmt","fmt","fmt","from","from","from","from_i64","from_u64","generic","get_hash","get_hash","hash","hash","init","init","init","into","into","into","lookup","partial_cmp","partial_cmp","ps","rc","read","row","serialize","serialize","shift","to_i64","to_owned","to_owned","to_owned","to_u64","try_from","try_from","try_from","try_into","try_into","try_into","typ","type_id","type_id","type_id","vbmul","verify","verify_add","verify_double","verify_endomul","verify_generic","verify_lookup","verify_poseidon","verify_vbmul","vzip","vzip","vzip","wires","write","zero","addition","double","endosclmul","generic","lookup","poseidon","varbasemul","CONSTANT_COEFF","MUL_COEFF","POS_ROWS_PER_HASH","ROUNDS_PER_HASH","ROUNDS_PER_ROW","SPONGE_WIDTH","STATE_ORDER","round_to_cols","constraints","scalars","ConstraintSystem","borrow","borrow_mut","create","cs","deref","deref_mut","drop","evaluate","from","init","into","l14","l18","lkpl4","lkpl8","lkpm","lookup_lnrz","lookup_quot","lookup_scalars","table1","table8","table8w","tablem","tbllkp_aggreg","tbllkp_quot","tbllkp_sortedset","try_from","try_into","type_id","vzip","zk_w1","ProofEvaluations","RandomOracles","beta","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","combine","deref","deref","deref_mut","deref_mut","drop","drop","fmt","from","from","gamma","h1","h2","init","init","into","into","l","lw","pe","po","tb","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","zero","constraints","scalars","ConstraintSystem","Custom","DisconnectedWires","GateError","IncorrectPublic","addl","addm","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","coefficients4","coefficientsm","create","deref","deref","deref_mut","deref_mut","deserialize","domain","doubl4","doubl8","double_lnrz","double_quot","double_scalars","doublem","drop","drop","ecad_lnrz","ecad_quot","ecad_scalars","emull","emulm","endo","endomul_lnrz","endomul_quot","endomul_scalars","eval_zk_polynomial","evaluate","fmt","fmt","fr_sponge_params","from","from","gates","generic4","genericm","gnrc_lnrz","gnrc_quot","gnrc_scalars","init","init","into","into","l04","l08","l1","mull4","mull8","mulm","perm_aggreg","perm_lnrz","perm_quot","perm_scalars","ps4","ps8","psdn_lnrz","psdn_quot","psdn_scalars","psm","public","sample_shift","sample_shifts","serialize","shift","sid","sigmal1","sigmal8","sigmam","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vbmul_lnrz","vbmul_quot","vbmul_scalars","verify","verify_generic","vzip","vzip","zero4","zero8","zk_polynomial","zk_w3","zkpl","zkpm","0","0","1","err","row","LookupEvaluations","ProofEvaluations","RandomOracles","aggreg","alpha","alpha_chal","beta","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","combine","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","from","from","from","gamma","generic_selector","init","init","init","into","into","into","lookup","poseidon_selector","s","sorted","table","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u","u_chal","v","v_chal","vzip","vzip","vzip","w","z","zeta","zeta_chal","LookupEvals","LookupPolys","LookupShifts","WitnessEvals","WitnessOverDomains","WitnessShifts","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","d4","d8","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","from","from","from","from","from","from","h1","h1","h2","h2","init","init","init","init","init","init","into","into","into","into","into","into","l","l","lw","lw","next","next","this","this","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","w","z","addition","double","endosclmul","generic","lookup","permutation","poseidon","tbllkp","varbasemul","COLUMNS","GENERICS","GateWires","PERMUTS","WIRES","Wire","borrow","borrow_mut","clone","clone_into","col","deref","deref_mut","deserialize","drop","eq","fmt","from","init","into","ne","new","read","row","serialize","to_owned","try_from","try_into","type_id","vzip","write"],"q":["plonk_15_wires_circuits","","","","","","","","","","plonk_15_wires_circuits::domains","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::exprplonk_15_wires_circuits::expr::Column","","","","","plonk_15_wires_circuits::expr::ConstantExpr","","","","","","","","","plonk_15_wires_circuits::expr::Expr","","","","","","","","","","","plonk_15_wires_circuits::expr::PolishToken","","","","","plonk_15_wires_circuits::gate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::gates","","","","","","","plonk_15_wires_circuits::gates::generic","","plonk_15_wires_circuits::gates::poseidon","","","","","","plonk_15_wires_circuits::lookup","","plonk_15_wires_circuits::lookup::constraints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::lookup::scalars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::nolookup","","plonk_15_wires_circuits::nolookup::constraints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::nolookup::constraints::GateError","","","","","plonk_15_wires_circuits::nolookup::scalars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::polynomial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_circuits::polynomials","","","","","","","","","plonk_15_wires_circuits::wires","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","Creates 4 evaluation domains <code>d1</code> (of size <code>n</code>), <code>d2</code> (of size <code>2n</code>…","","","","","","","","","","","","","","","","","","","","","","","","","","","A cache","","A key for a cached value","","","","A type representing one of the polynomials involved in the …","","An arithmetic expression over","The collection of constants required to evaluate an <code>Expr</code>.","","","An alias for the intended usage of the expression type in …","The collection of polynomials (all in evaluation form) and …","An multi-variate polynomial over the base ring <code>C</code> with …","","","","","","A “linearization”, which is linear combination with <code>E</code> …","","","","","The polynomials specific to the lookup argument.","","","","","","","A binary operation","For efficiency of evaluation, we compile expressions to …","","","","","","","","UnnormalizedLagrangeBasis(i) is (x^n - 1) / (x - omega^i)","","A type representing a variable which can appear in a …","","","","","","","The lookup aggregation polynomials.","The challenge alpha from the PLONK IOP.","The expression <code>beta</code>.","The challenge beta from the PLONK IOP.","","","","","","","","","","","","","","","","","","","","","","","","","Cache the value of the given expression","Convenience function for constructing cell variables.","","","","","","","","","","","","","","","","","","","","The coefficient column polynomials","The column of this variable","Combines multiple constraints <code>[c0, ..., cn]</code> into a single …","Convenience function for constructing constant expressions.","","Constant values required","","","","","","","","","","","","","","","","","","","","","","","","","The domains used in the PLONK argument.","","","","","","","","","","","","","","","","","","","","","Evaluate an expression into a field element.","Evaluate an expression as a field element against an …","Evaluate an RPN expression to a field element.","Evaluate an expression as a field element against the …","Evaluate the constant expressions in this expression down …","Evaluate the constants in a linearization with …","Compute the polynomial corresponding to this expression, …","Compute the polynomial corresponding to this expression, …","","","","","","","","","","","","","","","","","","","","","","","","","The challenge gamma from the PLONK IOP.","","","","","","","The index selector polynomials.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The challenge joint_combiner which is used to combine …","Computes <code>prod_{j != 1} (1 - omega^j)</code>","The value <code>prod_{j != 1} (1 - omega^j)</code>, used for efficiently","There is an optimization in PLONK called “linearization…","Convenience function for constructing expressions from …","Lookup specific polynomials","Apply a function to all the coefficients in the …","","","","","","","","","","","Create a new cache","","","","","","Exponentiate a constant expression.","Exponentiate an expression","Compute the powers of <code>x</code>, <code>x^0, ..., x^{n - 1}</code>","The row (Curr of Next) of this variable","The lookup-type selector polynomials.","The sorted lookup table polynomials.","","","The evaluations of the combined lookup table polynomial.","","","","","","","","","Compile an expression to an RPN expression.","Given a linearization and an environment, compute the …","Given a linearization and an environment, compute the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Evaluate the given constant expression to a field element.","","","","","","","","","","","","","The witness column polynomials","The permutation aggregation polynomial.","","","The polynomial which vanishes on the last 3 elements of …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","EC addition in Affine form","","","","EC point doubling in Affine form","EC variable base scalar multiplication with group …","","generic arithmetic gate","lookup","","Poseidon permutation gate","EC variable base scalar multiplication","zero gate","Returns 1 if self is an GateType::Add gate, 0 otherwise.","","","","","","","constraints vector","","","","","","","","","Creates an ECC add gate. Warning: this assumes that the …","","","","creates an addition gate","creates a constant gate","creates a multiplication gate","creates a public input gate","","","…","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","round constant that are relevant for this specific gate","","row position in the circuit","","","","","","","","","","","","","","","type of the gate","","","","","This function verifies the consistency of the wire …","Given a set of witness columns over an Add gate, verify …","","","verifies that the generic gate constraints are solved by …","","Checks if a witness verifies a poseidon gate","","","","","gate wires","","this function creates “empty” circuit gate","","","","","","","","","","Number of PLONK rows required to implement Poseidon","Number of rounds","Number of rows","Width of the sponge","The order in a row in which we store states before and …","Given a Poseidon round from 0 to 4 (inclusive), returns …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A specific gate did not verify correctly","Some connected wires have different values","Represents an error found when verifying a witness with a …","A public gate was incorrectly connected","EC point addition selector evaluations w over domain.d4","EC point addition constraint selector polynomial","","","","","","","coefficients polynomials in evaluation form","coefficients polynomials in coefficient form","creates a constraint system from a vector of gates (…","","","","","","evaluation domains","EC point doubling selector evaluations w over domain.d4","EC point doubling selector evaluations w over domain.d8","","","","EC point doubling constraint selector polynomial","","","","","","endoscalar multiplication selector evaluations over …","emulm constraint selector polynomial","coefficient for the group endomorphism","","","","Evaluates the polynomial (x - w^{n - 3}) * (x - w^{n - 2}) …","evaluate witness polynomials over domains","","","random oracle argument parameters","","","circuit gates","multiplication evaluations over domain.d4","","generic constraint linearization poly contribution …","generic constraint quotient poly contribution computation","produces generic(zeta) * w0 * w1, generic(zeta) * w0, …","","","","","0-th Lagrange evaluated over domain.d4","0-th Lagrange evaluated over domain.d8","1-st Lagrange evaluated over domain.d8","scalar multiplication selector evaluations over domain.d4","scalar multiplication selector evaluations over domain.d8","mulm constraint selector polynomial","permutation aggregation polynomial computation","permutation linearization poly contribution computation","permutation quotient poly contribution computation","","poseidon selector over domain.d4","poseidon selector over domain.d8","poseidon linearization poly contribution computation f^7 + …","poseidon quotient poly contribution computation …","","poseidon constraint selector polynomial","number of public inputs","sample coordinate shifts deterministically","","","wire coordinate shifts","SID polynomial","permutation polynomial array evaluations over domain d1","permutation polynomial array evaluations over domain d8","permutation polynomial array","","","","","","","","","","","This function verifies the consistency of the wire …","function to verify the generic polynomials with a witness","","","zero evaluated over domain.d8","zero evaluated over domain.d8","Computes the zero-knowledge polynomial for blinding the …","Returns the end of the circuit, which is used for …","zero-knowledge polynomial over domain.d8","zero-knowledge polynomial","","","","","","","","","lookup aggregation polynomial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","evaluation of the generic selector polynomial","","","","","","","lookup-related evaluations","evaluation of the poseidon selector polynomial","permutation polynomials (PERMUTS-1 evaluations because the …","sorted lookup table polynomial","lookup table polynomial","","","","","","","","","","","","","","","","","","","","witness polynomials","permutation polynomial","","","","","","Evaluations of the wires and permutation","","","","","","","","","","","","","","","","","","","","","","","","","","","evaluations over domain d4","evaluations over domain d8","","","","","","","","","","","","","","","","","","","","","","","","","lookup multiset","lookup multiset","lookup multiset","lookup multiset","","","","","","","","","","","","","aggregation","aggregation","lookup witness","lookup witness","next wire evaluations","next wire evaluations","this wire evaluations","this wire evaluations","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","wire evaluations","permutation evaluations","","","","","","","","","","","","GateWires document the wiring of a gate. More …","","","Wire documents the other cell that is wired to this one. …","","","","","","","","","","","","","","","","Creates a new set of wires for a given row.","","","","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,3,4,2,4,2,4,5,0,5,0,5,4,6,0,5,0,0,5,4,0,0,0,2,4,6,2,4,0,2,4,4,6,0,6,6,6,2,3,4,0,0,2,5,4,4,2,3,4,5,4,0,6,6,5,4,2,5,7,8,5,8,8,7,9,10,6,11,2,12,3,5,4,13,8,7,9,10,6,11,2,12,3,5,4,13,10,5,6,11,2,12,3,5,4,13,6,11,2,12,3,5,4,13,6,11,12,9,11,5,5,13,9,8,7,9,10,6,11,2,12,3,5,4,13,8,7,9,10,6,11,2,12,3,5,4,13,9,5,8,7,9,10,6,11,2,12,3,5,4,13,6,11,2,12,3,5,4,5,5,4,5,5,13,5,5,6,11,2,2,12,3,5,5,4,13,8,7,9,10,6,11,2,12,3,5,5,5,4,13,8,6,11,12,6,11,12,9,13,8,7,9,10,6,11,2,12,3,5,4,13,8,7,9,10,6,11,2,12,3,5,4,13,2,5,2,5,8,0,9,5,5,9,13,2,5,6,11,2,12,5,4,2,5,10,2,5,6,11,12,2,5,0,11,7,7,2,5,7,6,11,2,12,3,5,4,13,5,13,13,2,5,8,7,9,10,6,11,2,12,3,5,4,13,8,7,9,10,6,11,2,12,3,5,4,13,8,7,9,10,6,11,2,12,3,5,4,13,2,8,7,9,10,6,11,2,12,3,5,4,13,9,9,2,5,9,14,15,16,17,18,19,20,21,22,23,20,21,22,23,24,25,26,27,28,29,30,27,29,30,27,31,32,33,34,35,36,0,37,0,36,36,0,36,36,37,36,36,36,38,37,36,38,37,36,38,38,37,36,38,37,36,38,37,36,38,38,38,38,38,38,38,38,38,38,38,38,37,36,38,37,36,38,36,38,38,37,36,38,38,37,36,37,36,38,37,36,38,36,36,38,37,36,37,36,37,36,38,37,36,38,38,37,36,38,38,38,38,36,38,37,36,37,36,38,36,37,36,38,37,36,38,38,37,36,38,38,38,38,38,38,38,38,38,38,37,36,38,38,38,38,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,0,0,0,40,41,40,41,40,41,40,41,40,41,41,40,41,40,41,40,40,41,40,40,41,41,41,40,41,40,41,41,41,40,41,41,40,41,40,41,40,41,40,41,40,40,0,0,0,42,42,0,42,43,43,43,42,43,42,43,43,43,43,43,43,42,43,42,43,43,43,43,43,43,43,43,43,42,43,43,43,43,43,43,43,43,43,0,43,43,42,43,43,42,43,43,43,43,43,43,43,42,43,42,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,42,43,42,43,42,43,43,43,43,43,43,42,43,43,0,0,43,43,44,45,44,46,46,0,0,0,47,48,48,48,47,49,48,47,49,48,47,49,48,47,49,48,49,48,47,49,48,47,49,48,47,49,48,48,47,49,48,48,49,47,49,48,47,49,48,49,49,49,47,47,47,49,48,47,49,48,47,49,48,47,49,48,48,48,48,48,47,49,48,49,49,48,48,0,0,0,0,0,0,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,52,52,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,53,55,53,55,50,51,52,53,54,55,50,51,52,53,54,55,53,55,53,55,51,54,51,54,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,51,52,53,54,55,50,50,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["evaluationdomains",3]],[[]],[[["usize",15]],["option",4]],null,null,null,null,[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],null,null,[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["expr",4]],["expr",4]],[[["currornext",4],["column",4]],["expr",4]],[[],["column",4]],[[],["variable",3]],[[],["constantexpr",4]],[[],["cacheid",3]],[[],["op2",4]],[[],["expr",4]],[[],["polishtoken",4]],[[],["linearization",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["column",4]],["ordering",4]],[[["variable",3]],["ordering",4]],[[["cacheid",3]],["ordering",4]],null,null,[[["usize",15],["vec",3]]],[[],["expr",4]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["column",4]],["bool",15]],[[["variable",3]],["bool",15]],[[["constantexpr",4]],["bool",15]],[[["cacheid",3]],["bool",15]],[[["op2",4]],["bool",15]],[[["expr",4]],["bool",15]],[[["polishtoken",4]],["bool",15]],[[["d",3]],[["str",15],["result",4,["str"]]]],[[["d",3],["environment",3]],[["str",15],["result",4,["str"]]]],[[["d",3],["vec",3],["constants",3]],[["result",4,["str"]],["str",15]]],[[["d",3],["constants",3]],[["str",15],["result",4,["str"]]]],[[["environment",3]],["expr",4]],[[["environment",3]],[["linearization",3,["expr"]],["expr",4]]],[[["environment",3]],[["d",3],["evaluations",3,["d"]]]],[[["environment",3]],[["d",3],["evaluations",3,["d"]]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["u64",15]]],[[["u64",15]]],[[]],[[]],null,[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],null,[[["d",3],["fftfield",8]],["fftfield",8]],null,[[["hashset",3,["column"]],["column",4]],[["result",4,["linearization","str"]],["str",15],["linearization",3,["expr"]]]],[[]],null,[[["fn",8]],["linearization",3]],[[]],[[]],[[["column",4]],["bool",15]],[[["variable",3]],["bool",15]],[[["constantexpr",4]],["bool",15]],[[["cacheid",3]],["bool",15]],[[["expr",4]],["bool",15]],[[["polishtoken",4]],["bool",15]],[[],["constantexpr",4]],[[],["expr",4]],[[]],[[]],[[]],[[["column",4]],[["option",4,["ordering"]],["ordering",4]]],[[["variable",3]],[["option",4,["ordering"]],["ordering",4]]],[[["cacheid",3]],[["option",4,["ordering"]],["ordering",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15],["field",8]],[["vec",3],["field",8]]],null,null,null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["vec",3,["polishtoken"]],["polishtoken",4]]],[[["environment",3]]],[[["environment",3]]],[[],["string",3]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["constants",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[],["currornext",4]],[[],["gatetype",4]],[[],["circuitgate",3]],[[]],[[]],[[]],[[["currornext",4]],["ordering",4]],[[["gatetype",4]],["ordering",4]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["gatewires",6]]],[[["usize",15],["vec",3]]],[[["usize",15]],["vec",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[["currornext",4]],["bool",15]],[[["gatetype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[]],[[],["u64",15]],[[],["u64",15]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[["currornext",4]],[["option",4,["ordering"]],["ordering",4]]],[[["gatetype",4]],[["option",4,["ordering"]],["ordering",4]]],[[]],[[]],[[["read",8]],["ioresult",6]],null,[[],["result",4]],[[],["result",4]],[[],["usize",15]],[[],[["option",4,["i64"]],["i64",15]]],[[]],[[]],[[]],[[],[["u64",15],["option",4,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[["constraintsystem",3]],[["result",4,["string"]],["string",3]]],[[],[["result",4,["string"]],["string",3]]],[[],[["result",4,["string"]],["string",3]]],[[["constraintsystem",3]],[["result",4,["string"]],["string",3]]],[[],[["result",4,["string"]],["string",3]]],[[],[["result",4,["string"]],["string",3]]],[[["constraintsystem",3]],[["result",4,["string"]],["string",3]]],[[],[["result",4,["string"]],["string",3]]],[[]],[[]],[[]],null,[[["write",8]],["ioresult",6]],[[["usize",15],["gatewires",6]]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[["usize",15]],[["usize",15],["range",3,["usize"]]]],null,null,null,[[]],[[]],[[["usize",15],["circuitgate",3],["arithmeticspongeparams",3],["vec",3],["vec",3,["circuitgate"]]],["option",4]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["lookuppolys",3]],["lookupshifts",3]],[[]],[[],["usize",15]],[[]],null,null,null,null,null,[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]],[["d",3],["evaluations",3,["d"]]]],[[["vec",3]]],null,null,null,null,[[["randomoracles",3],["threadrng",3],["lookupevals",3]],[["prooferror",4],["result",4,["dp","prooferror"]],["dp",3]]],[[["lookuppolys",3],["randomoracles",3]],[["prooferror",4],["result",4,["prooferror"]]]],[[],["lookupevals",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["d",3],["fftfield",8]],["fftfield",8]],null,null,null,[[]],[[]],[[]],[[]],[[],["proofevaluations",3]],[[],["randomoracles",3]],[[]],[[]],[[],["proofevaluations",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],null,null,null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["constraintsystem",3]],[[]],null,null,[[["usize",15],["circuitgate",3],["arithmeticspongeparams",3],["vec",3,["circuitgate"]]],["option",4]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],null,null,null,[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]]],[[["vec",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]],[["d",3],["evaluations",3,["d"]]]],[[["vec",3]]],null,null,null,[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]],[["d",3],["evaluations",3,["d"]]]],[[["vec",3]]],[[["d",3],["fftfield",8]],["fftfield",8]],[[["dp",3]],["witnessoverdomains",3]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],null,[[]],[[]],null,null,null,[[],["densepolynomial",3]],[[],[["d",3],["evaluations",3,["d"]]]],[[],["vec",3]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,null,[[["threadrng",3]],[["prooferror",4],["result",4,["densepolynomial","prooferror"]],["densepolynomial",3]]],[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3],["densepolynomial",3]],[["prooferror",4],["result",4,["prooferror"]]]],[[["vec",3]]],null,null,[[["vec",3],["arithmeticspongeparams",3]],["densepolynomial",3]],[[["witnessoverdomains",3],["arithmeticspongeparams",3]]],[[["vec",3],["arithmeticspongeparams",3]],["vec",3]],null,null,[[["u32",15],["d",3]]],[[["usize",15],["d",3]],["vec",3]],[[],["result",4]],null,null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]]],[[["vec",3]]],[[],[["result",4,["gateerror"]],["gateerror",4]]],[[["densepolynomial",3]],["bool",15]],[[]],[[]],null,null,[[["d",3],["fftfield",8]],[["dp",3],["fftfield",8]]],[[["d",3],["fftfield",8]],["fftfield",8]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["lookupevaluations",3]],[[],["proofevaluations",3]],[[],["randomoracles",3]],[[]],[[]],[[]],[[],["proofevaluations",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["witnessevals",3]],[[],["witnessshifts",3]],[[],["witnessoverdomains",3]],[[],["lookupevals",3]],[[],["lookupshifts",3]],[[],["lookuppolys",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["wire",3]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[["usize",15]]],[[["wire",3]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[["wire",3]],["bool",15]],[[["usize",15]]],[[["read",8]],["ioresult",6]],null,[[],["result",4]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["write",8]],["ioresult",6]]],"p":[[3,"EvaluationDomains"],[4,"ConstantExpr"],[4,"Op2"],[4,"PolishToken"],[4,"Expr"],[4,"Column"],[3,"LookupEnvironment"],[3,"Constants"],[3,"Environment"],[3,"Cache"],[3,"Variable"],[3,"CacheId"],[3,"Linearization"],[13,"Witness"],[13,"LookupSorted"],[13,"LookupKindIndex"],[13,"Index"],[13,"Coefficient"],[13,"Literal"],[13,"Pow"],[13,"Add"],[13,"Mul"],[13,"Sub"],[13,"Constant"],[13,"Cell"],[13,"Double"],[13,"BinOp"],[13,"UnnormalizedLagrangeBasis"],[13,"Pow"],[13,"Cache"],[13,"Literal"],[13,"Cell"],[13,"Pow"],[13,"UnnormalizedLagrangeBasis"],[13,"Load"],[4,"GateType"],[4,"CurrOrNext"],[3,"CircuitGate"],[3,"ConstraintSystem"],[3,"RandomOracles"],[3,"ProofEvaluations"],[4,"GateError"],[3,"ConstraintSystem"],[13,"DisconnectedWires"],[13,"IncorrectPublic"],[13,"Custom"],[3,"LookupEvaluations"],[3,"RandomOracles"],[3,"ProofEvaluations"],[3,"WitnessEvals"],[3,"WitnessShifts"],[3,"WitnessOverDomains"],[3,"LookupEvals"],[3,"LookupShifts"],[3,"LookupPolys"],[3,"Wire"]]},\
"plonk_15_wires_protocol_dlog":{"doc":"","t":[0,0,0,0,0,3,3,12,11,11,11,11,12,11,12,11,11,11,11,11,11,12,12,11,11,12,12,11,12,12,12,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,12,8,10,10,10,10,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,17,17,17,17,17,17,5,3,12,11,11,12,11,11,12,11,12,11,12,11,11,12,12,12,12,11,11,11,11,12],"n":["index","plonk_sponge","prover","range","verifier","Index","VerifierIndex","add_comm","borrow","borrow","borrow_mut","borrow_mut","coefficients_comm","create","cs","deref","deref","deref_mut","deref_mut","deserialize","deserialize","domain","double_comm","drop","drop","emul_comm","endo","fmt","fq_sponge_params","fq_sponge_params","fr_sponge_params","from","from","from_file","generic_comm","init","init","into","into","max_poly_size","max_poly_size","max_quot_size","max_quot_size","mul_comm","psm_comm","serialize","serialize","shift","sigma_comm","srs","srs","to_file","try_from","try_from","try_into","try_into","type_id","type_id","verifier_index","vzip","vzip","w","zkpm","FrSponge","absorb","absorb_evaluations","challenge","new","ProverCommitments","ProverProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commitments","create","deref","deref","deref_mut","deref_mut","drop","drop","evals","from","from","ft_eval1","init","init","into","into","oracles","prev_chal_evals","prev_challenges","proof","public","t_comm","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","w_comm","z_comm","ADD","DBL","ENDML","MUL","PERM","PSDN","alpha_powers","OraclesResult","alphas","borrow","borrow_mut","combined_inner_product","deref","deref_mut","digest","drop","fq_sponge","from","ft_eval0","init","into","oracles","p_eval","polys","powers_of_eval_points_for_chunks","try_from","try_into","type_id","vzip","zeta1"],"q":["plonk_15_wires_protocol_dlog","","","","","plonk_15_wires_protocol_dlog::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_protocol_dlog::plonk_sponge","","","","","plonk_15_wires_protocol_dlog::prover","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_15_wires_protocol_dlog::range","","","","","","","plonk_15_wires_protocol_dlog::verifier","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","The index common to both the prover and verifier","The verifier index","EC addition selector polynomial commitment","","","","","coefficient commitment array","","constraints system polynomials","","","","","","","evaluation domain","EC doubling selector polynomial commitment","","","endoscalar multiplication selector polynomial commitment","endoscalar coefficient","","random oracle argument parameters","","","","","Deserializes a VerifierIndex from a file, given a pointer …","coefficient commitment array","","","","","maximal size of polynomial section","maximal size of polynomial section","maximal size of the quotient polynomial according to the …","maximal size of the quotient polynomial according to the …","EC variable base scalar multiplication selector polynomial …","poseidon constraint selector polynomial commitment","","","wire coordinate shifts","permutation commitment array","polynomial commitment keys","polynomial commitment keys","Writes a VerifierIndex to a file, potentially appending it …","","","","","","","","","","domain offset for zero-knowledge","zero-knowledge polynomial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function runs random oracle argument","","","","","","","","","","","","","","This function verifies the batch of zk-proofs proofs: …","","","","","","","","","","","Computes the powers of alpha, starting with alpha^2","The result of running the oracle protocol","pre-computed powers of the alpha challenge","","","?","","","the last evaluation of the Fq-Sponge in this protocol","","A sponge that acts on the base field of a curve","","The evaluation f(zeta) - t(zeta) * Z_H(zeta)","","","the challenges produced in the protocol","public polynomial evaluations","?","zeta^n and (zeta * omega)^n","","","","","pre-computed zeta^n"],"i":[0,0,0,0,0,0,0,1,2,1,2,1,1,2,2,2,1,2,1,2,1,1,1,2,1,1,1,2,2,1,1,2,1,1,1,2,1,2,1,2,1,2,1,1,1,2,1,1,1,2,1,1,2,1,2,1,2,1,2,2,1,1,1,0,3,3,3,3,0,0,4,5,4,5,4,5,4,5,5,5,4,5,4,5,4,5,5,4,5,5,4,5,4,5,5,5,5,5,5,4,4,5,4,5,4,5,4,5,5,4,5,4,4,0,0,0,0,0,0,0,0,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6],"f":[null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],null,[[["srs",3],["constraintsystem",3],["arithmeticspongeparams",3],["rc",3,["srs"]]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[],["result",4]],[[],["result",4]],null,null,[[["usize",15]]],[[["usize",15]]],null,null,[[["formatter",3]],["result",6]],null,null,null,[[]],[[]],[[["u64",15],["option",4,["u64"]],["srs",3],["arithmeticspongeparams",3],["arithmeticspongeparams",3],["rc",3,["srs"]],["path",3]],[["string",3],["result",4,["string"]]]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],null,null,null,null,[[["option",4,["bool"]],["bool",15],["path",3]],[["result",4,["string"]],["string",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["verifierindex",3]],[[]],[[]],null,null,null,[[]],[[["proofevaluations",3]]],[[],["scalarchallenge",3]],[[["arithmeticspongeparams",3]]],null,null,[[]],[[]],[[]],[[]],[[],["provercommitments",3]],[[],["proverproof",3]],[[]],[[]],null,[[["vec",3],["index",3]],[["result",4,["prooferror"]],["prooferror",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[["index",3],["polycomm",3]],[["clone",8],["oraclesresult",3],["fqsponge",8]]],[[["index",3]],[["vec",3,["vec"]],["vec",3,["vec"]]]],null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3]],[["prooferror",4],["result",4,["bool","prooferror"]],["bool",15]]],[[]],[[]],null,null,null,null,null,null,null,null,[[["field",8]],[["vec",3],["field",8]]],null,null,[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],null,[[]],null,[[],["usize",15]],[[]],null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null],"p":[[3,"VerifierIndex"],[3,"Index"],[8,"FrSponge"],[3,"ProverCommitments"],[3,"ProverProof"],[3,"OraclesResult"]]},\
"plonk_circuits":{"doc":"","t":[0,0,0,0,0,0,0,0,3,12,12,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,12,11,12,11,11,11,11,11,12,12,12,12,12,12,12,12,11,11,11,12,12,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,11,12,12,12,12,11,11,11,11,11,11,11,11,11,5,5,12,12,3,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,13,13,3,13,13,13,13,3,4,13,13,13,13,13,13,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,0,0,0,0,0,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,0,0,0,0,3,3,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,12,12,12,12,11,11,12,11,12,12,4,3,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["constraints","domains","gate","gates","polynomial","polynomials","scalars","wires","ConstraintSystem","addl4","addm","borrow","borrow_mut","clone","clone_into","create","deref","deref_mut","domain","drop","ecad_lnrz","ecad_quot","ecad_scalars","emul1l","emul1m","emul2l","emul2m","emul3l","emul3m","endo","endomul_lnrz","endomul_quot","endomul_scalars","evaluate","fr_sponge_params","from","gates","gnrc_lnrz","gnrc_quot","gnrc_scalars","init","into","l04","l08","l1","mul1l","mul1m","mul2l","mul2m","o","perm_lnrz","perm_quot","perm_scalars","ps4","ps8","psdn_lnrz","psdn_quot","psdn_scalars","psm","public","qc","qll","qlm","qml","qmm","qol","qom","qrl","qrm","r","rcm","sample_shifts","sid","sigmal1","sigmal4","sigmam","to_owned","try_from","try_into","type_id","vbmul_lnrz","vbmul_quot","vbmul_scalars","verify","vzip","zk_polynomial","zk_w","zkpl","zkpm","EvaluationDomains","borrow","borrow_mut","clone","clone_into","create","d1","d4","d8","deref","deref_mut","drop","fmt","from","init","into","to_owned","try_from","try_into","type_id","vzip","Add1","Add2","CircuitGate","Endomul1","Endomul2","Endomul3","Endomul4","Gate","GateType","Generic","Poseidon","Vbmul1","Vbmul2","Vbmul3","Zero","add1","add2","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","c","c","clone","clone","clone","clone_into","clone_into","clone_into","create_add","create_endomul","create_generic","create_poseidon","create_vbmul","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","endomul1","endomul2","endomul3","endomul4","eq","fmt","from","from","from","from_i64","from_u64","init","init","init","into","into","into","ps","qc","ql","qm","qo","qr","rc","read","to_i64","to_owned","to_owned","to_owned","to_u64","try_from","try_from","try_from","try_into","try_into","try_into","typ","typ","type_id","type_id","type_id","vbmul1","vbmul2","vbmul3","verify","verify_add1","verify_add2","verify_endomul1","verify_endomul2","verify_endomul3","verify_endomul4","verify_generic","verify_poseidon","verify_vbmul1","verify_vbmul2","verify_vbmul3","vzip","vzip","vzip","wires","wires","write","zero","addition","endosclmul","generic","poseidon","varbasemul","WitnessEvals","WitnessOverDomains","WitnessShifts","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","d4","d8","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","from","from","from","init","init","init","into","into","into","l","next","o","r","this","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","z","addition","endosclmul","generic","permutation","poseidon","varbasemul","ProofEvaluations","RandomOracles","alpha","alpha_chal","beta","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","combine","deref","deref","deref_mut","deref_mut","drop","drop","f","fmt","from","from","gamma","init","init","into","into","l","o","r","sigma1","sigma2","t","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","u","u_chal","v","v_chal","vzip","vzip","z","zero","zeta","zeta_chal","Col","GateWires","L","O","R","Wire","Wires","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","col","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","fmt","fmt","fmt","fmt","from","from","from","from","init","init","init","init","into","into","into","into","l","l","o","o","r","r","read","row","row","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","wires","write"],"q":["plonk_circuits","","","","","","","","plonk_circuits::constraints","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_circuits::domains","","","","","","","","","","","","","","","","","","","","","plonk_circuits::gate","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_circuits::gates","","","","","plonk_circuits::polynomial","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_circuits::polynomials","","","","","","plonk_circuits::scalars","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_circuits::wires","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"di":[0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,0,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,0,3,3,3,3,0,0,3,3,3,3,3,3,4,4,3,4,5,3,4,5,4,5,3,4,5,3,4,5,4,4,4,4,4,3,4,5,3,4,5,3,4,5,4,4,4,4,3,3,3,4,5,3,3,3,4,5,3,4,5,4,4,4,4,4,4,4,4,3,3,4,5,3,3,4,5,3,4,5,4,5,3,4,5,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,3,4,5,4,5,4,4,0,0,0,0,0,0,0,0,6,7,8,6,7,8,6,7,8,6,7,8,8,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,7,6,6,7,6,7,8,6,7,8,6,7,8,6,7,8,6,7,8,6,0,0,0,0,0,0,0,0,9,9,9,10,9,10,9,10,9,10,9,10,10,9,10,9,10,9,10,9,10,9,9,10,9,10,9,10,10,10,10,10,10,10,9,10,9,10,9,10,9,9,9,9,9,10,9,10,9,9,9,0,0,11,11,11,0,0,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,13,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,14,12,14,12,14,12,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,11,13,14,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["constraintsystem",3]],[[]],[[["vec",3,["circuitgate"]],["arithmeticspongeparams",3],["usize",15],["circuitgate",3]],["option",4]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]],[["d",3],["evaluations",3,["d"]]]],[[["vec",3]],["vec",3]],null,null,null,null,null,null,null,[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]]],[[["vec",3]],["vec",3]],[[["densepolynomial",3]],["witnessoverdomains",3]],null,[[]],null,[[["proofevaluations",3]],["densepolynomial",3]],[[["witnessoverdomains",3],["densepolynomial",3]]],[[["proofevaluations",3]],["vec",3]],[[],["usize",15]],[[]],null,null,null,null,null,null,null,null,[[["vec",3],["densepolynomial",3],["randomoracles",3]],["densepolynomial",3]],[[["randomoracles",3],["witnessoverdomains",3]],[["d",3],["evaluations",3,["d"]]]],[[["u64",15],["vec",3],["randomoracles",3]],["vec",3]],null,null,[[["arithmeticspongeparams",3],["vec",3]],["densepolynomial",3]],[[["arithmeticspongeparams",3],["witnessoverdomains",3]]],[[["arithmeticspongeparams",3],["vec",3]],["vec",3]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["d",3]]],null,null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[["vec",3]],["densepolynomial",3]],[[["witnessoverdomains",3]]],[[["vec",3]],["vec",3]],[[["vec",3]],["bool",15]],[[]],[[["fftfield",8],["d",3]],[["densepolynomial",3],["fftfield",8]]],[[["fftfield",8],["d",3]],["fftfield",8]],null,null,null,[[]],[[]],[[],["evaluationdomains",3]],[[]],[[["usize",15]],["option",4]],null,null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,[[],["gatetype",4]],[[],["circuitgate",3]],[[],["gate",3]],[[]],[[]],[[]],[[],["vec",3]],[[],["vec",3]],[[["gatewires",3]]],[[["gatewires",3]]],[[],["vec",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[]],[[["gatetype",4]],["bool",15]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[["i64",15]],["option",4]],[[["u64",15]],["option",4]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["read",8]],["ioresult",6]],[[],[["option",4,["i64"]],["i64",15]]],[[]],[[]],[[]],[[],[["u64",15],["option",4,["u64"]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],null,null,[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[["vec",3],["constraintsystem",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3],["constraintsystem",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3],["constraintsystem",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[["vec",3]],["bool",15]],[[]],[[]],[[]],null,null,[[["write",8]],["ioresult",6]],[[["gatewires",3]]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["witnessevals",3]],[[],["witnessshifts",3]],[[],["witnessoverdomains",3]],[[]],[[]],[[]],null,null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],null,null,null,null,null,[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[],["proofevaluations",3]],[[],["randomoracles",3]],[[]],[[]],[[],["proofevaluations",3]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["formatter",3]],["result",6]],[[]],[[]],null,[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null,null,null,null,[[]],[[]],null,[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["gatewires",3]],[[],["col",4]],[[],["wire",3]],[[],["wires",3]],[[]],[[]],[[]],[[]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,[[["read",8]],["ioresult",6]],null,null,[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[["write",8]],["ioresult",6]]],"p":[[3,"ConstraintSystem"],[3,"EvaluationDomains"],[4,"GateType"],[3,"CircuitGate"],[3,"Gate"],[3,"WitnessEvals"],[3,"WitnessShifts"],[3,"WitnessOverDomains"],[3,"RandomOracles"],[3,"ProofEvaluations"],[4,"Col"],[3,"GateWires"],[3,"Wire"],[3,"Wires"]]},\
"plonk_protocol_dlog":{"doc":"","t":[0,0,0,0,0,13,3,13,4,4,13,13,3,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,8,10,10,10,10,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,17,17,17,17,17,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12],"n":["index","plonk_sponge","prover","range","verifier","Generate","Index","Ref","SRSSpec","SRSValue","Use","Value","VerifierIndex","add_comm","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","create","create","cs","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","domain","drop","drop","drop","drop","emul1_comm","emul2_comm","emul3_comm","endo","fq_sponge_params","fq_sponge_params","fr_sponge_params","from","from","from","from","generate","get_ref","init","init","init","init","into","into","into","into","max_poly_size","max_poly_size","max_quot_size","max_quot_size","mul1_comm","mul2_comm","o","psm_comm","qc_comm","ql_comm","qm_comm","qo_comm","qr_comm","r","rcm_comm","sigma_comm","srs","srs","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","verifier_index","vzip","vzip","vzip","vzip","w","zkpm","0","0","0","0","FrSponge","absorb","absorb_evaluations","challenge","new","ProverCommitments","ProverProof","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","commitments","create","deref","deref","deref_mut","deref_mut","drop","drop","evals","from","from","init","init","into","into","l_comm","o_comm","oracles","prev_chal_evals","prev_challenges","proof","public","r_comm","t_comm","to_owned","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","verify","vzip","vzip","z_comm","ADD","ENDML","MUL","PERM","PSDN","CachedValues","alpha","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","from","init","into","to_owned","try_from","try_into","type_id","vzip","zeta1","zetaw"],"q":["plonk_protocol_dlog","","","","","plonk_protocol_dlog::index","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_protocol_dlog::index::SRSSpec","","plonk_protocol_dlog::index::SRSValue","","plonk_protocol_dlog::plonk_sponge","","","","","plonk_protocol_dlog::prover","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","plonk_protocol_dlog::range","","","","","plonk_protocol_dlog::verifier","","","","","","","","","","","","","","","","","",""],"di":[0,0,0,0,0,1,0,2,0,0,1,2,0,3,2,1,4,3,2,1,4,3,2,4,4,2,1,4,3,2,1,4,3,3,2,1,4,3,3,3,3,3,4,3,3,2,1,4,3,2,2,2,1,4,3,2,1,4,3,4,3,4,3,3,3,3,3,3,3,3,3,3,3,3,3,4,3,2,1,4,3,2,1,4,3,2,1,4,3,4,2,1,4,3,3,3,5,6,7,8,0,9,9,9,9,0,0,10,11,10,11,10,11,10,11,11,11,10,11,10,11,10,11,11,10,11,10,11,10,11,10,10,11,11,11,11,11,10,10,10,11,10,11,10,11,10,11,11,10,11,10,0,0,0,0,0,0,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["srsspec",4]],["srsvalue",4]],[[["constraintsystem",3],["srsspec",4],["arithmeticspongeparams",3]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["usize",15]],["srs",3]],[[],["srs",3]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["verifierindex",3]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,[[]],[[["proofevaluations",3]]],[[],["scalarchallenge",3]],[[["arithmeticspongeparams",3]]],null,null,[[]],[[]],[[]],[[]],[[],["provercommitments",3]],[[],["proverproof",3]],[[]],[[]],null,[[["index",3],["vec",3],["vec",3]],[["result",4,["prooferror"]],["prooferror",4]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],null,[[]],[[]],[[],["usize",15]],[[],["usize",15]],[[]],[[]],null,null,[[["polycomm",3],["index",3]]],[[["index",3]],[["vec",3,["vec"]],["vec",3,["vec"]]]],null,null,null,null,null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vec",3]],[["result",4,["bool","prooferror"]],["prooferror",4],["bool",15]]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[],["cachedvalues",3]],[[]],[[["usize",15]]],[[["usize",15]]],[[["usize",15]]],[[]],[[],["usize",15]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null],"p":[[4,"SRSSpec"],[4,"SRSValue"],[3,"VerifierIndex"],[3,"Index"],[13,"Use"],[13,"Generate"],[13,"Value"],[13,"Ref"],[8,"FrSponge"],[3,"ProverCommitments"],[3,"ProverProof"],[3,"CachedValues"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};