initSidebarItems({"attr":[["ocaml_gen","A macro to create OCaml bindings for a function that uses #[ocaml::func]"]],"derive":[["OCamlCustomType","Derives implementations for OCamlDesc and OCamlBinding on a custom type For example:"],["OcamlEnum","The OcamlEnum derive macro. It generates implementations of ToOCaml and OCamlBinding on an enum type. The type must implement [ocaml::IntoValue] and [ocaml::FromValue] For example:"],["OcamlGen","The OcamlGen derive macro. It generates implementations of ToOCaml and OCamlBinding on a struct. The type must implement [ocaml::IntoValue] and [ocaml::FromValue] For example:"]],"macro":[["const_random","Random constants"],["decl_fake_generic","Creates a fake generic. This is a necessary hack, at the moment, to declare types (with the [decl_type] macro) that have generic parameters."],["decl_func","Declares the binding for a given function"],["decl_module","Creates a module"],["decl_type","Declares the binding for a given type"],["decl_type_alias","Declares a new OCaml type that is made of other types"],["paste",""]],"mod":[["conv","Implementations of [crate::OCamlDesc] for types that have natural equivalents in OCaml."]],"struct":[["Env","The environment at some point in time during the declaration of OCaml bindings. It ensures that types cannot be declared twice, and that types that are renamed and/or relocated into module are referenced correctly."]],"trait":[["OCamlBinding","OCamlBinding is the trait implemented by types to generate their OCaml bindings. It is usually derived automatically via the [OcamlGen] macro, or the [OCamlCustomType] macro for custom types. For functions, refer to the [ocaml_gen] macro."],["OCamlDesc","OCamlDesc is the trait implemented by types to facilitate generation of their OCaml bindings. It is usually derived automatically via the [OcamlGen] macro, or the [OCamlCustomType] macro for custom types."]]});